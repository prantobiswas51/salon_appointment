<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use App\Models\Appointment;
use App\Models\Client;

class FixAppointmentData extends Command
{
    protected $signature = 'appointments:fix-data';
    protected $description = 'Fix appointment data by parsing "Client Name - Service - Phone" format in service field';

    public function handle()
    {
        $this->info('Fixing appointment data...');

        $appointments = Appointment::where('service', 'LIKE', '% - %')
            ->whereNull('client_id')
            ->get();

        if ($appointments->isEmpty()) {
            $this->info('No appointments to fix.');
            return 0;
        }

        $this->info("Found {$appointments->count()} appointments to fix.");

        $fixed = 0;

        foreach ($appointments as $appointment) {
            $parts = explode(' - ', $appointment->service);

            if (count($parts) !== 3) {
                $this->warn("Skipping appointment #{$appointment->id}: invalid format '{$appointment->service}'");
                continue;
            }

            [$name, $service, $phone] = array_map('trim', $parts);

            // Create or find client
            $client = Client::firstOrCreate(
                ['name' => $name, 'phone' => $phone],
                ['status' => 'Green']
            );

            // Update appointment
            $appointment->update([
                'client_id' => $client->id,
                'service' => $service,
            ]);

            $this->line("Fixed #{$appointment->id}: Client '{$name}' ({$phone}) → Service '{$service}'");
            $fixed++;
        }

        $this->info("✅ Successfully fixed {$fixed} appointments.");
        return 0;
    }
}
